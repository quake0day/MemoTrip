// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  householdMembers HouseholdMember[]
  tripAdmins       TripAdmin[]
  receipts         Receipt[]
  photos           Photo[]
  invitesCreated   Invite[]

  @@map("users")
}

model Household {
  id          String   @id @default(cuid())
  displayName String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  members          HouseholdMember[]
  tripParticipants TripParticipant[]
  invites          Invite[]

  @@map("households")
}

enum HouseholdRole {
  OWNER
  MEMBER
}

model HouseholdMember {
  id           String        @id @default(cuid())
  userId       String
  householdId  String
  role         HouseholdRole @default(MEMBER)
  weight       Float         @default(1.0)

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  household Household @relation(fields: [householdId], references: [id], onDelete: Cascade)

  @@unique([userId, householdId])
  @@map("household_members")
}

model Trip {
  id        String    @id @default(cuid())
  name      String
  currency  String    @default("USD")
  startDate DateTime?
  endDate   DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  admins       TripAdmin[]
  participants TripParticipant[]
  receipts     Receipt[]
  settlements  Settlement[]
  photos       Photo[]
  invites      Invite[]

  @@map("trips")
}

model TripAdmin {
  id     String @id @default(cuid())
  tripId String
  userId String

  trip Trip @relation(fields: [tripId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([tripId, userId])
  @@map("trip_admins")
}

model TripParticipant {
  id          String @id @default(cuid())
  tripId      String
  householdId String
  weight      Float  @default(1.0)

  trip      Trip      @relation(fields: [tripId], references: [id], onDelete: Cascade)
  household Household @relation(fields: [householdId], references: [id], onDelete: Cascade)

  @@unique([tripId, householdId])
  @@map("trip_participants")
}

enum ReceiptStatus {
  PENDING
  PARSED
  REVIEWED
  ERROR
}

model Receipt {
  id              String        @id @default(cuid())
  tripId          String
  uploaderId      String
  filePath        String
  fileHash        String?
  status          ReceiptStatus @default(PENDING)
  parsedJson      Json?
  manualEditsJson Json?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  trip     Trip @relation(fields: [tripId], references: [id], onDelete: Cascade)
  uploader User @relation(fields: [uploaderId], references: [id])

  @@index([tripId])
  @@map("receipts")
}

model Settlement {
  id           String   @id @default(cuid())
  tripId       String
  version      Int
  tableJson    Json
  transfersJson Json
  locked       Boolean  @default(false)
  createdAt    DateTime @default(now())

  trip Trip @relation(fields: [tripId], references: [id], onDelete: Cascade)

  @@unique([tripId, version])
  @@index([tripId])
  @@map("settlements")
}

model Photo {
  id         String   @id @default(cuid())
  tripId     String
  uploaderId String
  filePath   String
  exifJson   Json?
  width      Int?
  height     Int?
  thumbPath  String?
  tagsJson   Json?
  createdAt  DateTime @default(now())

  trip     Trip @relation(fields: [tripId], references: [id], onDelete: Cascade)
  uploader User @relation(fields: [uploaderId], references: [id])

  @@index([tripId])
  @@map("photos")
}

model Invite {
  id          String    @id @default(cuid())
  tripId      String
  code        String    @unique
  email       String?
  householdId String?
  expiresAt   DateTime
  maxUses     Int       @default(1)
  used        Int       @default(0)
  createdBy   String
  createdAt   DateTime  @default(now())

  trip       Trip       @relation(fields: [tripId], references: [id], onDelete: Cascade)
  creator    User       @relation(fields: [createdBy], references: [id])
  household  Household? @relation(fields: [householdId], references: [id], onDelete: SetNull)

  @@index([code])
  @@index([tripId])
  @@index([email])
  @@map("invites")
}
